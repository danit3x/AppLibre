-- MySQL Script generated by MySQL Workbench
-- Wed Jan  3 21:49:15 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema coworking
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `coworking` ;

-- -----------------------------------------------------
-- Schema coworking
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `coworking` DEFAULT CHARACTER SET utf8 ;
USE `coworking` ;

-- -----------------------------------------------------
-- Table `coworking`.`user`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `coworking`.`user` ;

CREATE TABLE IF NOT EXISTS `coworking`.`user` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `first_name` VARCHAR(45) NULL,
  `last_name` VARCHAR(45) NULL,
  `username` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  `password` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `name_UNIQUE` (`first_name` ASC) VISIBLE,
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  UNIQUE INDEX `username_UNIQUE` (`username` ASC) VISIBLE,
  UNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `coworking`.`category`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `coworking`.`category` ;

CREATE TABLE IF NOT EXISTS `coworking`.`category` (
  `id` INT NOT NULL,
  `name` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`));


-- -----------------------------------------------------
-- Table `coworking`.`type_user`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `coworking`.`type_user` ;

CREATE TABLE IF NOT EXISTS `coworking`.`type_user` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  UNIQUE INDEX `name_UNIQUE` (`name` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `coworking`.`reservation`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `coworking`.`reservation` ;

CREATE TABLE IF NOT EXISTS `coworking`.`reservation` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `user` INT NULL,
  `space` VARCHAR(45) NULL,
  `init_date` VARCHAR(45) NULL,
  `end_date` VARCHAR(45) NULL,
  `status` VARCHAR(45) NULL,
  `cost` VARCHAR(45) NULL,
  `user_id` INT NOT NULL,
  PRIMARY KEY (`id`, `user_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `fk_reservation_user1_idx` (`user_id` ASC) VISIBLE,
  CONSTRAINT `fk_reservation_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `coworking`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `coworking`.`space`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `coworking`.`space` ;

CREATE TABLE IF NOT EXISTS `coworking`.`space` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  `category` INT NULL,
  `capacity` INT NULL,
  `amenities` VARCHAR(45) NULL,
  `price_per_hour` DOUBLE NULL,
  `description` TEXT(300) NULL,
  `image` VARCHAR(60) NULL,
  `reservation_id` INT NOT NULL,
  `reservation_user_id` INT NOT NULL,
  `category_id` INT NOT NULL,
  PRIMARY KEY (`id`, `reservation_id`, `reservation_user_id`, `category_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `fk_space_reservation1_idx` (`reservation_id` ASC, `reservation_user_id` ASC) VISIBLE,
  INDEX `fk_space_category1_idx` (`category_id` ASC) VISIBLE,
  CONSTRAINT `fk_space_reservation1`
    FOREIGN KEY (`reservation_id` , `reservation_user_id`)
    REFERENCES `coworking`.`reservation` (`id` , `user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_space_category1`
    FOREIGN KEY (`category_id`)
    REFERENCES `coworking`.`category` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `coworking`.`payment`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `coworking`.`payment` ;

CREATE TABLE IF NOT EXISTS `coworking`.`payment` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `amount` DOUBLE NOT NULL,
  `date` DATE NOT NULL,
  `user_id` INT NOT NULL,
  `reservation_id` INT NOT NULL,
  `reservation_user_id` INT NOT NULL,
  PRIMARY KEY (`id`, `user_id`, `reservation_id`, `reservation_user_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `fk_payment_user1_idx` (`user_id` ASC) VISIBLE,
  INDEX `fk_payment_reservation1_idx` (`reservation_id` ASC, `reservation_user_id` ASC) VISIBLE,
  CONSTRAINT `fk_payment_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `coworking`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_payment_reservation1`
    FOREIGN KEY (`reservation_id` , `reservation_user_id`)
    REFERENCES `coworking`.`reservation` (`id` , `user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `coworking`.`user_profile`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `coworking`.`user_profile` ;

CREATE TABLE IF NOT EXISTS `coworking`.`user_profile` (
  `user_id` INT NOT NULL,
  `type_user_id` INT NOT NULL,
  PRIMARY KEY (`user_id`, `type_user_id`),
  INDEX `fk_user_profile_type_user1_idx` (`type_user_id` ASC) VISIBLE,
  CONSTRAINT `fk_user_profile_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `coworking`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_profile_type_user1`
    FOREIGN KEY (`type_user_id`)
    REFERENCES `coworking`.`type_user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
